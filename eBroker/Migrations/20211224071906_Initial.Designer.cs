// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

namespace eBroker.Migrations
{
    [DbContext(typeof(EBrokerDBContext))]
    [Migration("20211224071906_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Repository.Entities.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Account");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Balance = 0m,
                            CreatedOn = new DateTime(2021, 12, 24, 12, 49, 5, 815, DateTimeKind.Local).AddTicks(315),
                            CustomerId = 1,
                            CustomerName = "Shashank",
                            IsActive = true,
                            ModifiedOn = new DateTime(2021, 12, 24, 12, 49, 5, 816, DateTimeKind.Local).AddTicks(1680)
                        },
                        new
                        {
                            Id = 2,
                            Balance = 100m,
                            CreatedOn = new DateTime(2021, 12, 24, 12, 49, 5, 816, DateTimeKind.Local).AddTicks(2140),
                            CustomerId = 2,
                            CustomerName = "Test User 1",
                            IsActive = true,
                            ModifiedOn = new DateTime(2021, 12, 24, 12, 49, 5, 816, DateTimeKind.Local).AddTicks(2145)
                        },
                        new
                        {
                            Id = 3,
                            Balance = 3000m,
                            CreatedOn = new DateTime(2021, 12, 24, 12, 49, 5, 816, DateTimeKind.Local).AddTicks(2148),
                            CustomerId = 3,
                            CustomerName = "Test User 2",
                            IsActive = true,
                            ModifiedOn = new DateTime(2021, 12, 24, 12, 49, 5, 816, DateTimeKind.Local).AddTicks(2149)
                        });
                });

            modelBuilder.Entity("Repository.Entities.Equity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("EquityDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EquityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Equity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2021, 12, 24, 12, 49, 5, 817, DateTimeKind.Local).AddTicks(4700),
                            EquityDescription = "Equity 1",
                            EquityName = "Equity 1",
                            ModifiedOn = new DateTime(2021, 12, 24, 12, 49, 5, 817, DateTimeKind.Local).AddTicks(4709)
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2021, 12, 24, 12, 49, 5, 817, DateTimeKind.Local).AddTicks(4714),
                            EquityDescription = "Equity 2",
                            EquityName = "Equity 2",
                            ModifiedOn = new DateTime(2021, 12, 24, 12, 49, 5, 817, DateTimeKind.Local).AddTicks(4715)
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2021, 12, 24, 12, 49, 5, 817, DateTimeKind.Local).AddTicks(4717),
                            EquityDescription = "Equity 3",
                            EquityName = "Equity 3",
                            ModifiedOn = new DateTime(2021, 12, 24, 12, 49, 5, 817, DateTimeKind.Local).AddTicks(4718)
                        });
                });

            modelBuilder.Entity("Repository.Entities.EquityHolding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("EquityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Units")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EquityId");

                    b.ToTable("EquityHolding");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2021, 12, 24, 12, 49, 5, 817, DateTimeKind.Local).AddTicks(6172),
                            CustomerId = 1,
                            EquityId = 1,
                            ModifiedOn = new DateTime(2021, 12, 24, 12, 49, 5, 817, DateTimeKind.Local).AddTicks(6177),
                            Units = 1000
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2021, 12, 24, 12, 49, 5, 817, DateTimeKind.Local).AddTicks(6182),
                            CustomerId = 2,
                            EquityId = 1,
                            ModifiedOn = new DateTime(2021, 12, 24, 12, 49, 5, 817, DateTimeKind.Local).AddTicks(6183),
                            Units = 20
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2021, 12, 24, 12, 49, 5, 817, DateTimeKind.Local).AddTicks(6185),
                            CustomerId = 2,
                            EquityId = 2,
                            ModifiedOn = new DateTime(2021, 12, 24, 12, 49, 5, 817, DateTimeKind.Local).AddTicks(6186),
                            Units = 30
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2021, 12, 24, 12, 49, 5, 817, DateTimeKind.Local).AddTicks(6187),
                            CustomerId = 2,
                            EquityId = 3,
                            ModifiedOn = new DateTime(2021, 12, 24, 12, 49, 5, 817, DateTimeKind.Local).AddTicks(6189),
                            Units = 100
                        });
                });

            modelBuilder.Entity("Repository.Entities.EquityTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("EquityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PricePerUnit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int");

                    b.Property<int>("Units")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EquityTransaction");
                });

            modelBuilder.Entity("Repository.Entities.EquityHolding", b =>
                {
                    b.HasOne("Repository.Entities.Equity", "Equity")
                        .WithMany()
                        .HasForeignKey("EquityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equity");
                });
#pragma warning restore 612, 618
        }
    }
}
